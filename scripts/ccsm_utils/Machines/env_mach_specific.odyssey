#! /bin/sh -f

# -------------------------------------------------------------------------
# USERDEFINED
# Edit this file to add module load or other paths needed for the build
# and run on the system.  Can also include general env settings for machine.
# Some samples are below
# -------------------------------------------------------------------------

#source /opt/modules/default/init/csh
#if ( $COMPILER == "pgi" ) then
#  module load pgi
#endif
#module load netcdf

#limit coredumpsize unlimited

:<<EOF
source /usr/local/bin/new-modules.sh
module purge
module load perl-modules/5.22.0-fasrc03
  module load intel/15.0.0-fasrc01 impi/5.1.2.150-fasrc01 netcdf/4.1.3-fasrc09
  module load intel-mkl/2017.2.174-fasrc01
  module load esmf/6.3.0r-fasrc02
module load cmake/2.8.12.2-fasrc01
EOF

#module load ncarenv/1.0
#module load ncarbinlibs/1.0
#module load perlmods

#if ( $COMPILER == "intel" ) then
#  module load intel/15.0.0-fasrc01 impi/5.1.2.150-fasrc01 netcdf/4.1.3-fasrc09
#  module load intel-mkl/2017.2.174-fasrc01
# Currently trilinos is only supported with the INTEL compiler
#TODO  module load trilinos/11.0.3

# Currently netcdf-mpi is only supported for intel
#  module load netcdf/4.1.3-fasrc09
#  if ( $MPILIB == "mpi-serial") then
#    module load netcdf/4.3.0
#  else
# Currently netcdf-mpi is only supported for intel
#    module load netcdf-mpi/4.3.0
#  endif

# Currently esmf is only supported with the INTEL compiler
#  module load esmf/6.3.0r-fasrc02
#  if ( $MPILIB == "mpi-serial") then
#    if ( $DEBUG == "TRUE") then
#      module load esmf-6.3.0r-ncdfio-uni-g
#    else
#      module load esmf-6.3.0r-ncdfio-uni-O
#    endif
#  else
#    if ( $DEBUG == "TRUE") then
#      module load esmf-6.3.0r-defio-mpi-g
#    else
#      module load esmf-6.3.0r-defio-mpi-O
#    endif
#  endif
#endif

#module load cmake/2.8.12.2-fasrc01

